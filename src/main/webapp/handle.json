#*
########################################################################
##  OpenHandle - Velocity Template for JSON Serialization of Handle
##
##  This is a Velocity template for a JSON serialization of a
##  Handle record as generated by OpenHandle [1]. The Handle System data
##  model is specified by RFC 3651 [2].  For further information on the
##  Handle System, see [3].
##
##  Author: Tony Hammond <t.hammond@nature.com>
##  Date:   2008-03-16T12:00:00Z
##
##  ==
##  [1] http://openhandle.googlecode.com/
##  [2] http://www.ietf.org/rfc/rfc3651.txt
##  [3] http://wwww.handle.net/
########################################################################
*##set ($this = $request.getAttribute("id"))
{
    "comment" : "OpenHandle (JSON) - see http://openhandle.googlecode.com/" ,

    "handle" : "<info:hdl/${this.handle}>" ,
    "handleValues" : [
#foreach ($value in $this.values)
        {
            "index" : "${value.index}" ,
            "type" : "${value.type}" ,
#if (!$value.type.binary)
#if (${value.type} == "URL")
            "data" : "<${value.data}>" ,
#else
            "data" : "${value.data}" ,
#end
#elseif ($value.type.admin)
            "data" : {
                "adminRef" : "<info:hdl/${this.handle}#index=${value.index}/>" ,
                "adminPermission" : {
#foreach ($permission in $value.admin.permissions.entrySet())
#if ($velocityCount.equals($value.admin.permissions.entrySet().size()))
                    "${permission.key}" : "${permission.value}"
#else
                    "${permission.key}" : "${permission.value}" , 
#end
#end
                 }
            } ,
#elseif ($value.type.site)
            "data" : {
                "version" : "${value.site.dataFormatVersion}" ,
                "protocolVersion" : {
                    "majorProtocolVersion" : "${value.site.majorProtocolVersion}" ,
                    "minorProtocolVersion" : "${value.site.minorProtocolVersion}" ,
                } ,
                "serialNumber" : "${value.site.serialNumber}" ,
                "primaryMask" : {
                    "primary" : "${value.site.isPrimary}" ,
                    "multiPrimary" : "${value.site.multiPrimary}" ,
                } ,
                "hashOption" : "${value.site.hashOption}" ,
                "hashFilter" : "${value.site.hashFilter}" ,
                "attributes" : [
#foreach ($attribute in $value.site.attributes.entrySet())
                    {
                        "name" : "${attribute.key}" ,
                        "value" : "${attribute.value}" ,
#if ($velocityCount.equals($value.site.attributes.entrySet().size()))
                    }
#else
                    } ,
#end
#end
                ] ,
                "numOfServer" : "$value.site.servers.size()" ,
                "serverRecords" : [
#foreach ($server in $value.site.servers)
                    {
                        "serverID" : "${server.id}" ,
                        "address" : "${server.address}" ,
#if ($server.publicKey)
                        "publicKeyRecord" : "${server.publicKey}" ,
#end
                        "serviceInterface" : {
                            "interfaceCounter" : "$server.interfaces.size()" ,
#foreach ($interface in $server.interfaces)
                            "interface" : {
                                "serviceType" : "${interface.type}" ,
                                "transmissionProtocol" : "${interface.protocol}" ,
                                "portNumber" : "${interface.port}" ,
#if ($velocityCount.equals($server.interfacess.size()))
                            }
#else
                            } ,
#end
#end
                        }
#if ($velocityCount.equals($value.site.servers.size()))
                    }
#else
                    } ,
#end
#end
                ]
            } ,
#elseif ($value.type.service)
            "data" : {
            } ,
#elseif ($value.type.primary)
            "data" : {
            } ,
#elseif ($value.type.alias)
            "data" : {
            } ,
#elseif ($value.type.valueReferenceList)
            "data" : {
            } ,
#end
            "permission" : {
                "adminRead" : "${value.permissions.adminRead}" ,
                "adminWrite" : "${value.permissions.adminWrite}" ,
                "publicRead" : "${value.permissions.publicRead}" ,
                "publicWrite" : "${value.permissions.publicWrite}"
            } ,
            "ttl" : {
                "ttlType" : "${value.ttlType}" ,
                "ttlValue" : "${value.ttl}"
            } ,
            "timestamp" : "${value.timestamp}" ,
            "reference"  : {
                "referenceCount" : "${value.references.size()}" ,
                "referenceList" : [
#foreach ($reference in $value.valueReferences)
#if ($velocityCount < $value.valueReferences.size())
                    <info:hdl/${reference.handle}#index=${reference.index}/> ,
#else
                    <info:hdl/${reference.handle}#index=${reference.index}/>
#end
#end
                ]
            }
        }#if(!($velocityCount.equals($this.values.size()))) ,#end

#end

    ]
}
